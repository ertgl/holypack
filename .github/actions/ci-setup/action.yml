name: Setup CI
description: Setup CI environment with a reusable composite action.

inputs:
  build-cache-key:
    description: 'Cache key for the build'
    required: false
    default: ''
  cache-build:
    description: 'Should cache the build'
    required: false
    default: 'true'
  cache-node-modules:
    description: 'Should cache node_modules'
    required: false
    default: 'true'
  node-modules-cache-key:
    description: 'Cache key for node_modules'
    required: false
    default: ''
  restore-build-cache:
    description: 'Should restore the build cache'
    required: false
    default: 'true'
  restore-node-modules-cache:
    description: 'Should restore the node_modules cache'
    required: false
    default: 'true'

outputs:
  final-build-cache-key:
    description: 'The final build cache key'
    value: ${{ steps.determine-build-cache-key.outputs.final-build-cache-key }}
  final-node-modules-cache-key:
    description: 'The final node_modules cache key'
    value: ${{ steps.determine-node-modules-cache-key.outputs.final-node-modules-cache-key }}

runs:
  using: composite
  steps:
    - name: Determine build cache key
      id: determine-build-cache-key
      shell: bash
      env:
        FINAL_BUILD_CACHE_KEY: ${{ inputs.build-cache-key || format('build-cache-{0}-{1}', runner.os, hashFiles('e2e/yarn.lock', 'integrations/**/*', 'internal/**/*', 'packages/**/*', 'yarn.lock')) }}
      run: echo "final-build-cache-key=$(echo "$FINAL_BUILD_CACHE_KEY")" >> $GITHUB_OUTPUT

    - name: Determine node_modules cache key
      id: determine-node-modules-cache-key
      shell: bash
      env:
        FINAL_NODE_MODULES_CACHE_KEY: ${{ inputs.node-modules-cache-key || format('node-modules-cache-{0}-{1}', runner.os, hashFiles('e2e/yarn.lock', 'yarn.lock')) }}
      run: echo "final-node-modules-cache-key=$(echo "$FINAL_NODE_MODULES_CACHE_KEY")" >> $GITHUB_OUTPUT

    - name: Setup Node.js LTS
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
        registry-url: 'https://registry.npmjs.org'

    - name: Enable Corepack
      shell: bash
      run: corepack enable

    - name: Restore node_modules cache
      id: restore-node-modules-cache
      if: ${{ inputs.restore-node-modules-cache == 'true' }}
      uses: actions/cache/restore@v4
      with:
        path: |
          node_modules/
          e2e/node_modules/
          e2e/*/*/node_modules/
          integrations/*/node_modules/
          internal/*/*/node_modules/
          packages/*/node_modules/
        key: ${{ steps.determine-node-modules-cache-key.outputs.final-node-modules-cache-key }}

    - name: Install dependencies
      id: install-dependencies
      if: ${{ steps.restore-node-modules-cache.outputs.cache-hit != 'true' }}
      shell: bash
      run: yarn install --immutable

    - name: Install E2E dependencies
      id: install-e2e-dependencies
      if: ${{ steps.restore-node-modules-cache.outputs.cache-hit != 'true' && steps.install-dependencies.conclusion == 'success' }}
      shell: bash
      run: yarn e2e:yarn install --immutable

    - name: Cache node_modules
      id: cache-node-modules
      if: ${{ inputs.cache-node-modules == 'true' && steps.restore-node-modules-cache.outputs.cache-hit != 'true' && steps.install-dependencies.conclusion == 'success' }}
      uses: actions/cache/save@v4
      with:
        path: |
          node_modules/
          e2e/node_modules/
          e2e/*/*/node_modules/
          integrations/*/node_modules/
          internal/*/*/node_modules/
          packages/*/node_modules/
        key: ${{ steps.determine-node-modules-cache-key.outputs.final-node-modules-cache-key }}

    - name: Restore build cache
      id: restore-build-cache
      if: ${{ inputs.restore-build-cache == 'true' }}
      uses: actions/cache/restore@v4
      with:
        path: |
          e2e/*/*/dist/
          integrations/*/dist/
          internal/*/*/dist/
          packages/*/dist/
        key: ${{ steps.determine-build-cache-key.outputs.final-build-cache-key }}

    - name: Prepare
      id: prepare
      if: ${{ steps.restore-build-cache.outputs.cache-hit != 'true' }}
      shell: bash
      run: yarn prepare

    - name: Build
      id: build
      if: ${{ steps.restore-build-cache.outputs.cache-hit != 'true' && steps.prepare.conclusion == 'success' }}
      shell: bash
      run: yarn build

    - name: Prepare E2E
      id: prepare-e2e
      if: ${{ steps.restore-build-cache.outputs.cache-hit != 'true' && steps.build.conclusion == 'success' }}
      shell: bash
      run: yarn e2e:prepare

    - name: Build E2E
      id: build-e2e
      if: ${{ steps.restore-build-cache.outputs.cache-hit != 'true' && steps.prepare-e2e.conclusion == 'success' }}
      shell: bash
      run: yarn e2e:build

    - name: Cache build
      id: cache-build
      if: ${{ inputs.cache-build == 'true' && steps.restore-build-cache.outputs.cache-hit != 'true' && steps.build.conclusion == 'success' && steps.build-e2e.conclusion == 'success' }}
      uses: actions/cache/save@v4
      with:
        path: |
          e2e/*/*/dist/
          integrations/*/dist/
          internal/*/*/dist/
          packages/*/dist/
        key: ${{ steps.determine-build-cache-key.outputs.final-build-cache-key }}
